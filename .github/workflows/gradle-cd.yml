# 워크플로우의 이름 지정
name: Memorlink CD

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches: [ main ] # main branch로 push 될 때 실행됩니다.

env:
  S3_BUCKET_NAME: memorlink-server   # 오타 수정 (sever -> server)
  S3_KEY: sopt_server.zip            # 업로드/배포에 공통 사용

jobs:
  build:
    name: Code deployment

    # 실행 환경
    runs-on: ubuntu-latest

    steps:
    # 1) 워크플로우 실행 전 기본적으로 체크아웃 필요
    - name: checkout
      uses: actions/checkout@v3

    # 2) JDK 설치 (프로젝트 버전과 일치 확인)
    - name: Set up JDK 23
      uses: actions/setup-java@v3
      with:
        java-version: '23'
        distribution: 'temurin'

    # 3) 환경변수 파일 생성
    - name: Generate application.yml
      shell: bash
      run: |
        mkdir -p ./src/main/resources
        # secrets 내용을 파일에 기록 (덮어쓰기, 로그 출력 금지)
        printf '%s' "${{ secrets.SOPT_APPLICATION }}" > ./src/main/resources/application.yml

    # 이 워크플로우는 gradle build
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle # 실제 application build(-x 옵션을 통해 test는 제외)
      run: ./gradlew build -x test

    # 디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy

    # Jar 파일 복사
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy

    # appspec.yml 파일 복사
    - name: Copy appspec.yml
      run: cp appspec.yml ./deploy

    # script files 복사
    - name: Copy script
      run: cp ./scripts/*.sh ./deploy

    - name: Make zip file
      shell: bash
      run: zip -r "./${{ env.S3_KEY }}" ./deploy

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp "./${{ env.S3_KEY }}" "s3://$S3_BUCKET_NAME/$S3_KEY" --region ap-northeast-2

    # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      run: |
        aws deploy create-deployment \
          --application-name sopt-server-codedeploy \
          --deployment-group-name sopt-server-codedeploy-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$S3_KEY \
          --region ap-northeast-2
